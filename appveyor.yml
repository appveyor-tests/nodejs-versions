version: 1.0.{build}

environment:
  expected_default_node: v18.
  expected_lts_node: v18.
  expected_stable_node: v18.
  expected_current_node: v19.
  
init:
- appveyor version
- echo %AVVM_DOWNLOAD_URL%

test_script:
  - ps: Write-Host "Default"
  - ps: $default_node = (node --version)
  - ps: $default_node
  - ps: if(-not $default_node.startsWith($env:expected_default_node)) { throw "Default Node.js version should be $($env:expected_default_node).x" }
  
  - ps: Write-Host "LTS"
  - ps: Install-Product node 'LTS'
  - ps: $lts_node = (node --version)
  - ps: $lts_node
  - ps: if(-not $lts_node.startsWith($env:expected_lts_node)) { throw "LTS Node.js version should be $($env:expected_lts_node).x" }
  
  - ps: Write-Host "Current"
  - ps: Install-Product node 'Current'
  - ps: $current_node = (node --version)
  - ps: $current_node
  - ps: if(-not $current_node.startsWith($env:expected_current_node)) { throw "Current Node.js version should be $($env:expected_current_node).x" }
  
  - ps: Write-Host "Stable"
  - ps: Install-Product node 'Stable'
  - ps: $stable_node = (node --version)
  - ps: $stable_node
  - ps: if(-not $stable_node.startsWith($env:expected_stable_node)) { throw "Stable Node.js version should be $($env:expected_stable_node).x" }
  
  - ps: |
      $versions = @("19.0.1", "18.12.0", "17.9.1", "16.18.1", "15.14.0", "14.21.1", "13.14.0", "12.22.12", "11.15.0", "10.24.1", "9.11.2", "8.17.0", "7.10.1", "6.16.0", "4.9.1", "0.12.18")
      foreach ($version in $versions){
        Install-Product node $version
        $nv = node -v
        $File = $version + ".txt"
        $out = $env:appveyor_build_folder + $File
        $nv | Out-File $File
        if ($nv -eq ("v" + $version)){
          Write-Host "Correct version"
        }
        else{
          exit 1
        }
        Start-Sleep -s 1
      }
      if($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
  
artifacts:
  - path: '**\*.txt'

build: off
